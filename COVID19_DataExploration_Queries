--Checking to see if tables are populated

SELECT *
FROM "covid_deaths"
WHERE continent is not null

SELECT *
FROM "covid_vaccinations"
WHERE continent is not null

--Data I'll be working with mostly

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM "covid_deaths"
ORDER BY 1,2


--Looking at total case vs total deaths
--Likelihood of dying if you contract covid in your country

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM "covid_deaths"
WHERE location = 'United States'
ORDER BY 1,2


--Looking at total cases vs population
--Shows what percentage of population got covid

SELECT location, date, total_cases, population, (total_cases/population)*100 as PercentPopulationInfected
FROM "covid_deaths"
WHERE location = 'United States'
ORDER BY 1,2


--Looking at countries with highest infections rate compared to population

SELECT location, population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM "covid_deaths"
WHERE continent is not null
GROUP BY location, population
HAVING MAX((total_cases/population))*100 is not null
ORDER BY PercentPopulationInfected desc


--Showing countries highest death count per population

SELECT location, MAX(total_deaths) as TotalDeathCount
FROM "covid_deaths"
WHERE continent is not null
GROUP BY location
HAVING max(total_deaths) is not null
ORDER BY TotalDeathCount desc


--Breaking it down by continent
--Shows the sum of all deaths in each continent

SELECT location, MAX(total_deaths) as TotalDeathCount
FROM "covid_deaths"
WHERE continent is null
GROUP BY location
HAVING max(total_deaths) is not null
ORDER BY TotalDeathCount desc


--Shows the highest death count from each country in the continent

SELECT continent, MAX(total_deaths) as TotalDeathCount
FROM "covid_deaths"
WHERE continent is not null
GROUP BY continent
HAVING MAX(total_deaths)is not null
ORDER BY TotalDeathCount desc


--Global numbers

SELECT SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths, SUM(new_deaths)/SUM(new_cases)*100 as DeathPercentage
FROM "covid_deaths"
WHERE continent is not null
--GROUP BY date
ORDER BY 1,2


--Total population vs vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
	SUM(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date)
	as RollingPeopleVaccinated
FROM "covid_deaths" as dea
	INNER JOIN "covid_vaccinations" as vac
		ON dea.location = vac.location
		and dea.date = vac.date
WHERE dea.continent is not null
ORDER BY 2,3
	
	
--USE CTE

With PopVsVac (continent, location, date, population, new_vaccinations, RollingPeopleVaccinated)
as
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
	SUM(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date)
	as RollingPeopleVaccinated
FROM "covid_deaths" as dea
	INNER JOIN "covid_vaccinations" as vac
		ON dea.location = vac.location
		AND dea.date = vac.date
WHERE dea.continent is not null
--AND dea.location = 'United Kingdom'
--ORDER BY 2,3
)
SELECT *, (RollingPeopleVaccinated/population)*100
FROM PopVsVac


--Temp Table

DROP TABLE if exists PercentPopulationVaccinated
CREATE TABLE PercentPopulationVaccinated
(
Continent text,
Location text,
Date date,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
);

INSERT INTO PercentPopulationVaccinated(Continent, Location, Date, Population, New_vaccinations, RollingPeopleVaccinated)
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
	SUM(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date)
	as RollingPeopleVaccinated
FROM "covid_deaths" as dea
	INNER JOIN "covid_vaccinations" as vac
		ON dea.location = vac.location
		AND dea.date = vac.date
WHERE dea.continent is not null
)
SELECT *, (RollingPeopleVaccinated/population)*100
FROM PercentPopulationVaccinated


--Creating view to store data for later visualizations

CREATE VIEW PercentPopulationVaccinated as

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
	SUM(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER BY dea.location, dea.date)
	as RollingPeopleVaccinated
FROM "covid_deaths" as dea
	INNER JOIN "covid_vaccinations" as vac
		ON dea.location = vac.location
		AND dea.date = vac.date
WHERE dea.continent is not null

SELECT *
FROM PercentPopulationVaccinated

